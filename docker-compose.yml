services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: os2514-backend
    environment:
      - NODE_ENV=production
      - PORT=3000
      - PG_HOST=db
      - PG_PORT=5432
      - PG_DATABASE=soccer_game
      - PG_USER=postgres
      - PG_PASSWORD=postgres
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MAX_PLAYERS_PER_ROOM=6
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: os2514-frontend
    ports:
      - "8080:8080"
    depends_on:
      - backend
    networks:
      - app-network

  db:
    image: postgres:16-alpine
    container_name: os2514-postgres
    environment:
      - POSTGRES_DB=soccer_game
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/schema.sql:/docker-entrypoint-initdb.d/001-schema.sql:ro
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d soccer_game" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    container_name: os2514-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  pgdata:


networks:
  app-network:
    driver: bridge
